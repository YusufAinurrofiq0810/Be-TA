// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  User
  Admin
}

model User {
  id       String @id @default(uuid())
  email    String
  username String
  fullName String
  password String
  phone    String
  alamat   String
  role     role   @default(User)

  deletedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Donation  Donation[]
}

enum Status_Berita {
  published
  unpublished
}

model News {
  id               Int           @id @default(autoincrement())
  crowdfounding    Crowdfounding @relation(fields: [crowdfounding_id], references: [id])
  crowdfounding_id Int
  category         Category      @relation(fields: [category_id], references: [id])
  category_id      Int
  title            String
  content          String
  image            String
  status_Berita    Status_Berita

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  image       String
  deletedAt   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  News        News[]
}

enum Status {
  Published
  Unpublished
}

model Crowdfounding {
  id                     Int      @id @default(autoincrement())
  title                  String
  status_donasi          Status
  donation_target        String
  donation_collected     String
  donation_start_date    DateTime
  donation_finished_date DateTime

  deletedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  News      News[]
  Donation  Donation[]
}

enum donate {
  success
  failed
  pending
}

model Donation {
  id               Int           @id @default(autoincrement())
  user_id          String
  user             User          @relation(fields: [user_id], references: [id])
  crowdfounding    Crowdfounding @relation(fields: [crowdfounding_id], references: [id])
  crowdfounding_id Int
  amount           Float
  message          String
  xenditInvoiceId  String
  status           donate
}
