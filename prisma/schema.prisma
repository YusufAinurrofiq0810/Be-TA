// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  User
  Admin
}

model User {
  id       String @id @default(uuid())
  email    String
  username String
  fullname String
  password String
  phone    String
  alamat   String
  role     role   @default(User)

  deletedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Donation  Donation[]
}

enum statusberita {
  published
  unpublished
}

model News {
  id              String        @id @default(uuid())
  crowdfounding   Crowdfounding @relation(fields: [crowdfoundingId], references: [id])
  crowdfoundingId String
  category        Category      @relation(fields: [categoryId], references: [id])
  categoryId      String
  title           String
  content         String
  image           String
  statusBerita    statusberita  @default(published)

  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String
  image       String
  deletedAt   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  News        News[]
}

enum status {
  published
  unpublished
}

model Crowdfounding {
  id                   String   @id @default(uuid())
  title                String
  statusDonasi         status   @default(published)
  donationTarget       String
  donationCollected    String
  donationStartDate    DateTime
  donationFinishedDate DateTime

  deletedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  News      News[]
  Donation  Donation[]
}

enum donatestatus {
  SUCCESS
  FAILED
  PENDING
}

model Donation {
  id              String        @id @default(uuid())
  userId          String
  user            User          @relation(fields: [userId], references: [id])
  crowdfounding   Crowdfounding @relation(fields: [crowdfoundingId], references: [id])
  crowdfoundingId String
  amount          Float
  message         String?
  xenditInvoiceId String
  status          donatestatus
}
